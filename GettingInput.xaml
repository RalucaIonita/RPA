<Activity mc:Ignorable="sap sap2010" x:Class="GettingInput" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_urls" Type="InArgument(scg:List(s:Tuple(x:String, x:String)))" />
    <x:Property Name="out_requests" Type="OutArgument(scg:List(s:Tuple(x:String, x:String, x:String, x:String)))" />
    <x:Property Name="out_token" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>979,2620</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GettingInput_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Extensions</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GettingInput" sap:VirtualizedContainerService.HintSize="723,2555" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(s:Tuple(x:String, x:String))" Name="URLs" />
      <Variable x:TypeArguments="x:String" Name="Token" />
      <Variable x:TypeArguments="scg:List(s:Tuple(x:String, x:String, x:String, x:String))" Name="processedRequests" />
      <Variable x:TypeArguments="x:String" Name="inputId" />
      <Variable x:TypeArguments="x:String" Name="inputBody" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="681,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[in_urls]" />
    <Assign DisplayName="SaveArgument" sap:VirtualizedContainerService.HintSize="681,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String))">[URLs]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String))">[in_urls]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="681,238" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Access token" Title="Please input a valid access token">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[Token]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <Assign sap:VirtualizedContainerService.HintSize="681,60" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String, x:String, x:String))">[processedRequests]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String, x:String, x:String))">[new List(Of Tuple(Of String, String, String, String))]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="s:Tuple(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="681,1686" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[URLs]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="s:Tuple(x:String, x:String)">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Tuple(x:String, x:String)" Name="item" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="645,1552" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:Tuple(x:String, x:String, x:String, x:String)" Name="dummie" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="603,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[inputBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="603,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[inputId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
            <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[item.Item1.ToString]" sap:VirtualizedContainerService.HintSize="603,1098" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <If x:Key="GET" Condition="[item.Item2.Contains(&quot;}&quot;)]" sap:VirtualizedContainerService.HintSize="484,386" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Then>
                  <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="[&quot;Please enter input for: &quot; + item.Item1 + item.Item2]" Title="GET input">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="x:String">[inputId]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                </If.Then>
              </If>
              <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" x:Key="POST" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="[&quot;Please enter input for: &quot;  + item.Item1 + item.Item2]" Title="POST input">
                <ui:InputDialog.Result>
                  <OutArgument x:TypeArguments="x:String">[inputBody]</OutArgument>
                </ui:InputDialog.Result>
              </ui:InputDialog>
              <Sequence x:Key="PUT" sap:VirtualizedContainerService.HintSize="563,848" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[item.Item2.Contains(&quot;}&quot;)]" sap:VirtualizedContainerService.HintSize="521,478" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="376,330" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="False" Label="[&quot;Please enter route argument for: &quot;  + item.Item1 + item.Item2]" Title="PUT input">
                        <ui:InputDialog.Result>
                          <OutArgument x:TypeArguments="x:String">[inputId]</OutArgument>
                        </ui:InputDialog.Result>
                      </ui:InputDialog>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="521,238" sap2010:WorkflowViewState.IdRef="InputDialog_6" IsPassword="False" Label="[&quot;Please enter body input for: &quot;  + item.Item1 + item.Item2]" Title="PUT input">
                  <ui:InputDialog.Result>
                    <OutArgument x:TypeArguments="x:String">[inputBody]</OutArgument>
                  </ui:InputDialog.Result>
                </ui:InputDialog>
              </Sequence>
              <If x:Key="DELETE" Condition="[item.Item2.Contains(&quot;}&quot;)]" sap:VirtualizedContainerService.HintSize="484,386" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="InputDialog_7" IsPassword="False" Label="[&quot;Please enter input for: &quot; + item.Item1 + item.Item2]" Title="DELETE input">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="x:String">[inputId]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                </If.Then>
              </If>
            </Switch>
            <Assign sap:VirtualizedContainerService.HintSize="603,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Tuple(x:String, x:String, x:String, x:String)">[dummie]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Tuple(x:String, x:String, x:String, x:String)">[new Tuple(of String, String, String, String)( item.Item1, item.Item2, inputId, inputBody)]</InArgument>
              </Assign.Value>
            </Assign>
            <AddToCollection x:TypeArguments="s:Tuple(x:String, x:String, x:String, x:String)" Collection="[processedRequests]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="603,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[dummie]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <Assign sap:VirtualizedContainerService.HintSize="681,60" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String, x:String, x:String))">[out_requests]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(s:Tuple(x:String, x:String, x:String, x:String))">[processedRequests]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="681,60" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_token]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Token]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>